include ../button/button.pug

mixin dropdown(options = {})
  -
    const {
      label = '',
      value = '',
      name = '',
      words = [[]],
      maxValues = [],
      modifier = '',
      isButton = false,
    } = options;

    const BASE_CLASS = 'dropdown'
    let className = BASE_CLASS
  if modifier
    - className += ` ${BASE_CLASS}_${modifier}`

  div(class=`${className} js-${BASE_CLASS}`)
    label(class=`${BASE_CLASS}__title`)= label
      input(class=`${BASE_CLASS}__input js-${BASE_CLASS}__input` type='text' placeholder=value value='' name=name readonly)
      img(class=`${BASE_CLASS}__tip js-${BASE_CLASS}__tip` src=require('./img/tip.svg') alt='уголок')

    ul(class=`${BASE_CLASS}__select js-${BASE_CLASS}__select`)
      - for(let i=0; i<words[0].length; i++)  {
          li(class=`${BASE_CLASS}__select-item js-${BASE_CLASS}__select-item` data-type= words[1][i])
            p(class=`${BASE_CLASS}__text`)= words[0][i]
            button(class=`${BASE_CLASS}__minus js-${BASE_CLASS}__minus` aria-label='минус') -
            span(class=`${BASE_CLASS}__value js-${BASE_CLASS}__value`) 0
            button(class=`${BASE_CLASS}__plus js-${BASE_CLASS}__plus` data-max=maxValues[i] aria-label='плюс') +
      -}
      
      -if(isButton){
          li(class=`${BASE_CLASS}__buttons`)
            div(class=`${BASE_CLASS}__button-clear js-${BASE_CLASS}__button-clear`)
              +button({
                text:'очистить',
                type:'button',
                modifiers:['text']
                    })
            div(class=`${BASE_CLASS}__button-apply js-${BASE_CLASS}__button-apply`)
              +button({
                text:'применить',
                type:'button',
                modifiers:['text']
                    })
      -}